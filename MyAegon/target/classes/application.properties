server.contextPath=/aegon
server.port=8080

#db.url=jdbc:derby:memory:testDB;create=true
#db.url=jdbc:derby:memory:testDB


# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:derby:memory:testDB;create=true
#spring.datasource.username = root
#spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



table.create.booking=create table BOOKING \
(booking_id INT NOT NULL, \
 room_id INT NOT NULL, \
 customer_id INT NOT NULL, \
 start_date DATE NOT NULL, \
 end_Date DATE NOT NULL, \
 PRIMARY KEY (booking_id))

table.create.customer= create table CUSTOMER \
(customer_id INT NOT NULL, \
firstname VARCHAR(50), \
lastname VARCHAR(50), \
title VARCHAR(50), \
address1 VARCHAR(50), \
address2 VARCHAR(50), \
address3 VARCHAR(50), \
city VARCHAR(50), \
country VARCHAR(50), \
postcode VARCHAR(50), \
mobile VARCHAR(50), \
telephone VARCHAR(50), \
email VARCHAR(50), \
PRIMARY KEY (customer_id))

table.create.room= create table ROOM \
(room_id INT NOT NULL, \
room_number INT, \
room_type VARCHAR(20), \
cost INT, \
PRIMARY KEY (room_id))


table.room1=INSERT INTO room VALUES (1, 121, 'SINGLE', 100)
table.room2=INSERT INTO room VALUES (2, 122, 'SINGLE', 100)
table.room3=INSERT INTO room VALUES (3, 123, 'DOUBLE', 200)
table.room4=INSERT INTO room VALUES (4, 124, 'DOUBLE', 200)
table.room5=INSERT INTO room VALUES (5, 125, 'DOUBLE', 200)

